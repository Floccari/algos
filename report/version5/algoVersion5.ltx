

\usepackage{geometry}
\geometry{a4paper, total={170mm,257mm}, left=20mm, top=20mm}
\usepackage[utf8]{inputenc}
\usepackage[italian]{babel}
\usepackage[T1]{fontenc}
\usepackage{graphicx}
\usepackage{listings}
\usepackage{color}
\usepackage{hyperref}
\usepackage{algorithm}
\usepackage{algorithmic}
\definecolor{dkgreen}{rgb}{0,0.6,0}
\definecolor{gray}{rgb}{0.5,0.5,0.5}
\definecolor{mauve}{rgb}{0.58,0,0.82}



\begin{document}


\begin{algorithm}
\renewcommand{\thealgorithm}{}
\floatname{algorithm}{}
\caption{diagnosticate(behavioralAutomaton,observation)}
\begin{algorithmic}[1]
\STATE \COMMENT {ricordiando che il diagnosticatore Ã¨ memorizzato nella struttura dati automaton}
\STATE $diagnosticator \leftarrow getDiagnosticator(behavioralAutomaton)$
\STATE $sHashmap \leftarrow createHashMap()$
\STATE $initial \leftarrow initial[diagnosticator]$
\STATE $lookup \leftarrow createLookup(id[initial])$
\STATE $item \leftarrow createItem(lookup,initial)$
\STATE $hashMapInsert(sHashmap,item)$
\STATE $obs \leftarrow tail(obersvation)$
\WHILE {$obs \neq NIL$}
\STATE $newHashmap \leftarrow createHashMap()$
\FOR {$i\leftarrow 0 $ \textbf{to} $size[sHashMap]$}
\IF {$buffer[sHashmap][i] \neq NIL $}
\STATE $item \leftarrow buffer[sHashmap][i]$
\WHILE {$item \neq NIL$}
\STATE $state \leftarrow value[item]$
\STATE $transitionsOut \leftarrow trOut[state]$
\WHILE {$transitionsOut \neq NIL$}
\IF {$id[obs] = id[obs[transitionsOut]]$}
\STATE $newLabel \leftarrow concatenateLabel(value[state],rel[transitionsOut])$
\STATE $dest \leftarrow dest[transitionsOut]$
\STATE $destItem \leftarrow hashMapSearch(newHashmap,id[dest])$
\IF {$destItem \neq NIL$}
\STATE $value[dest] \leftarrow alternateLabel(value[dest],newLabel)$
\ELSE 
\STATE $lookup \leftarrow createLookup(id[dest])$
\STATE $it \leftarrow createItem(lookup,dest)$
\STATE $hashMapInster(newHashmap,it)$
\ENDIF
\ENDIF
\STATE $transitionsOut \leftarrow next[transitionsOut]$
\ENDWHILE 
\STATE $item \leftarrow next[item]$
\ENDWHILE 
\ENDIF
\ENDFOR
\STATE $sHashmap \leftarrow newHashmap$
\STATE $obs \leftarrow prev[obs]$
\ENDWHILE

\STATE $diagnosis \leftarrow NIL$
\STATE $initialized \leftarrow FALSE$
\FOR {$i \leftarrow 0$ \textbf{to} $size[sHashmap]$}
\IF {$buffer[sHashmap][i] \neq NIL$}
\STATE $item \leftarrow buffer[sHashmap][i]$
\WHILE {$item \neq NIL$}
\STATE $state \leftarrow value[item]$
\STATE $lab \leftarrow NIL$
\STATE \COMMENT{delta contiene l'espressione regolare della chiusura calcolata fino a state}
\IF {$delta[state] \neq NIL$}
\STATE $deltaLab \leftarrow initializeLabel()$
\STATE $type[deltaLab] \leftarrow RELEVANCE$
\STATE $id[deltaLab] \leftarrow delta[state]$
\IF {$final[state] = TRUE$}
\IF {$initialized = TRUE$}
\STATE $l \leftarrow concatenateLabel(value[state],deltaLab)$
\STATE $newLabel \leftarrow alternateLabel(diagnosis,l)$
\STATE $diagnosis \leftarrow newLabel$
\ELSE
\STATE $diagnosis \leftarrow concatenateLabel(value[state],deltaLab)$
\STATE $initialized \leftarrow TRUE$
\ENDIF
\ENDIF
\ENDIF
\STATE $item \leftarrow next[item]$
\ENDWHILE
\ENDIF
\ENDFOR 
\RETURN diagnosis
\end{algorithmic}
\end{algorithm}

\end{document}

